# Generated by Django 4.0.3 on 2024-12-05 06:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import services.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('services', '0009_exams_is_delete'),
    ]

    operations = [
        migrations.CreateModel(
            name='Package',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('status', models.PositiveIntegerField(choices=[(1, 'Activo'), (2, 'Inactivo'), (3, 'Eliminado')], default=1)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('status', models.PositiveIntegerField(choices=[(1, 'Activo'), (2, 'Inactivo'), (3, 'Eliminado')], default=1)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.PositiveIntegerField(choices=[(1, 'Documento'), (2, 'Video')], default=1)),
                ('source', models.URLField(blank=True)),
                ('product_image', django_resized.forms.ResizedImageField(crop=None, force_format='WebP', keep_meta=True, null=True, quality=50, scale=None, size=[400, 566], upload_to=services.models.Product.product_upload_to)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Aceptado'), (2, 'Pendiente'), (3, 'En carrito')], default=3)),
                ('payment_image', django_resized.forms.ResizedImageField(crop=None, force_format='WebP', keep_meta=True, null=True, quality=50, scale=None, size=[400, 566], upload_to=services.models.Sell.product_upload_to)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('on_cart_at', models.DateTimeField(null=True)),
                ('on_pending_at', models.DateTimeField(null=True)),
                ('paid_at', models.DateTimeField(null=True)),
                ('packages', models.ManyToManyField(related_name='sells', to='services.package')),
                ('products', models.ManyToManyField(related_name='sells', to='services.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sells', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='package',
            name='products',
            field=models.ManyToManyField(related_name='packages', to='services.product'),
        ),
        migrations.AddField(
            model_name='exams',
            name='packages',
            field=models.ManyToManyField(related_name='exams', to='services.package'),
        ),
        migrations.AddField(
            model_name='exams',
            name='products',
            field=models.ManyToManyField(related_name='exams', to='services.product'),
        ),
    ]
